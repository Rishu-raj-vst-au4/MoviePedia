{"version":3,"sources":["APIKey.js","components/Layout/spinner.gif","components/Layout/Navbar.js","components/Layout/Footer.js","components/Home/SearchForm.js","Actions/searchaction.js","Actions/type.js","components/Home/MovieCard.js","components/Home/MovieContainer.js","components/Layout/spinner.js","components/Home/Landing.js","components/Home/Movie.js","Reducers/searchReducer.js","Reducers/Index.js","Redux/store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","APIKey","Navbar","className","href","id","Component","Footer","target","SearchForm","handlechange","e","props","searchMovie","value","handleSubmit","preventDefault","FetchMovies","text","onSubmit","this","type","name","placeholder","onChange","connect","state","movies","dispatch","payload","axios","get","then","response","data","catch","error","console","log","MovieCard","movie","src","Poster","alt","Title","Year","to","imdbID","MovieContainer","content","Response","Search","map","index","key","Spinner","spinner","style","width","margin","display","Landing","loading","Movie","fetchMovie","match","params","movieinfo","Genre","Released","Rated","imdbRating","Director","Writer","Actors","Plot","rel","InitState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0700fc37.chunk.js","sourcesContent":["module.exports = {\r\n    APIKey : 'd7427946'\r\n}","module.exports = __webpack_public_path__ + \"static/media/spinner.3d806475.gif\";","import React, { Component } from \"react\";\r\n\r\n\r\nclass Navbar extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <nav className=\"navbar navbar-dark bg-dark\">\r\n                    <div className=\"container\">\r\n                        <div className=\"navbar-header\">\r\n                            <a className=\"navbar-brand text-white text lg brand-text\" href=\"#\">\r\n                             MoviePedia\r\n\r\n                            </a>\r\n\r\n                        </div>\r\n                        <ul className=\"navbar-nav ml-auto text-light d-inline-block\">\r\n                            <li className=\"nav-item d-inline-block mr-4\">\r\n                                <i className=\"fab fa-imdb fa-5x\" id = \"imdb-logo\" />\r\n                            </li>\r\n\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Navbar;","import React,{ Component } from \"react\";\r\n\r\n\r\nclass Footer extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"footer p-3 mt-4 text-center bg-dark text-light\">\r\n                        Developed By:\r\n                        <span className=\"text-warning font-weight-normal\">\r\n                            <a href=\"https://www.linkedin.com/in/rishu-raj-308263172/\" target='_blank'>\r\n                            Rishu Raj\r\n                            </a>\r\n                        </span>\r\n                        ,Using   <i className=\"fab fa-react\" />   React JS   &amp;   Redux JS Integrated with external movies data API\r\n                        <a href=\"http://www.omdbapi.com/\" target=\"_blank\">\r\n                            OMDB\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {searchMovie,FetchMovies} from \"../../Actions/searchaction\";\r\n\r\nclass SearchForm extends Component{\r\n    handlechange = e =>{\r\n        this.props.searchMovie(e.target.value);\r\n    }\r\n    handleSubmit = e =>{\r\n        e.preventDefault();\r\n        this.props.FetchMovies(this.props.text)\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"jumbotron jumbotron-fluid mt-5 text-center\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-4 mb-3\">\r\n                        <i className=\"fa fa-search\">\r\n                            Search for Movies and , Tv Series ....\r\n                        </i>\r\n                    </h1>\r\n                    <form id=\"searchForm\" onSubmit={this.handleSubmit}>\r\n                        <input type=\"text\" className=\"form-control\" name=\"searchText\" placeholder=\"Search for Movies and , Tv Series ....\" onChange={this.handlechange}/>\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-bg mt-3\">\r\n                            Search\r\n                        </button>\r\n                    </form>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapstatetoprops = state =>({\r\n    text:state.movies.text\r\n})\r\n\r\n\r\nexport default connect(mapstatetoprops,{searchMovie,FetchMovies})(SearchForm);","import {SEARCH_MOVIE,FETCH_MOVIE,FETCH_MOVIES} from \"./type\";\r\nimport axios from \"axios\"\r\nimport {APIKey}  from '../APIKey'\r\n\r\nexport const searchMovie = (text) => dispatch =>{\r\n    dispatch({\r\n        type:SEARCH_MOVIE,\r\n        payload:text\r\n    })\r\n} \r\n\r\nexport const FetchMovies = (text) => dispatch =>{\r\n    axios.get(`http://www.omdbapi.com/?apikey=${APIKey}&s=${text}`)\r\n      .then(response=>dispatch({\r\n          type:FETCH_MOVIES,\r\n          payload:response.data\r\n      }))\r\n      .catch(error => console.log(error));\r\n      \r\n\r\n}\r\nexport const fetchMovie = (id) => dispatch =>{\r\n    axios.get(`http://www.omdbapi.com/?apikey=${APIKey}&i=${id}`)\r\n      .then(response=>dispatch({\r\n          type:FETCH_MOVIE,\r\n          payload:response.data\r\n      }))\r\n      .catch(error => console.log(error));\r\n      \r\n\r\n}","export const SEARCH_MOVIE =  'SEARCH_MOVIE';\r\nexport const FETCH_MOVIES =  'FETCH_MOVIES';\r\nexport const FETCH_MOVIE =  'FETCH_MOVIE';","import React,{ Component } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass MovieCard extends Component{\r\n    render(){\r\n        console.log(this.props);\r\n        \r\n        const {movie} = this.props\r\n        return(\r\n                <div className=\"col-md-3 mb-5\">\r\n                    <div className=\"card card-body bg-dark text-center h-100\">\r\n                        <img className=\"w-100 mb-2\" src={movie.Poster} alt=\"Movie Cover\" />\r\n                        <h5 className=\"text-light card-title\">\r\n                            {movie.Title} - {movie.Year}\r\n                        </h5>\r\n                        <Link className=\"btn btn-primary\" to={'/movie/' + movie.imdbID}>\r\n                            Movie Details\r\n                            <i className=\"fas fa-chevron-right\" />\r\n                        </Link>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default MovieCard;","import React , { Component } from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport MovieCard from './MovieCard'\r\n\r\n\r\nclass MovieContainer extends Component{\r\n    render(){\r\n         \r\n        const {movies} = this.props\r\n\r\n        let content = ''\r\n\r\n        content = movies.movies.Response === 'True' ? movies.movies.Search.map((movie,index)=><MovieCard key={index} movie={movie}/>) : null ; \r\n\r\n        return(\r\n            <div className=\"row\">\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapstatetoprops = state =>({\r\n    movies:state.movies\r\n})\r\n\r\nexport default connect(mapstatetoprops)(MovieContainer);","import React from \"react\";\r\nimport spinner from \"./spinner.gif\";\r\n\r\nfunction Spinner(){\r\n    return(\r\n        <div>\r\n            <img \r\n            src={spinner}\r\n            style={{width:'200px',margin:'auto',display:'block'}}\r\n            alt =\"Loading.....\">\r\n            </img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React , { Component } from \"react\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport {connect} from \"react-redux\";\r\nimport MovieContainer from \"./MovieContainer\";\r\nimport Spinner from \"../Layout/spinner\"\r\n\r\n\r\nclass Landing extends Component{\r\n    render(){\r\n        const {loading} = this.props\r\n        return(\r\n            <div className=\"container\">\r\n                <SearchForm />\r\n                {loading ? <Spinner />           \r\n                   :<MovieContainer />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapstatetoprops = state =>({\r\n    loading:state.movies.loading\r\n})\r\n\r\n\r\nexport default connect(mapstatetoprops)(Landing);","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchMovie} from \"../../Actions/searchaction\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Spinner from '../Layout/spinner';\r\n\r\n\r\nclass Movie extends Component{\r\n\r\n    componentDidMount(){\r\n        this.props.fetchMovie(this.props.match.params.id)\r\n    }\r\n    \r\n    render(){\r\n        const {loading , movie} = this.props;\r\n\r\n        let movieinfo = (\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4 card-body\">\r\n                    <img src={movie.Poster} className=\"thumbnail\" alt=\"Poster\" />\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                     <h2 className=\"mb-4\">{movie.Title}</h2>\r\n                    <ul className=\"list-group\">\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Genre:</strong>{movie.Genre}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Released:</strong>{movie.Released}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Rated:</strong>{movie.Rated}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <strong>IMDB Rating:</strong>{movie.imdbRating}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Director:</strong>{movie.Director}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Writer:</strong>{movie.Writer}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Actors:</strong>{movie.Actors}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"card card-body bg-dark my-5 text-light\">\r\n                    <div className=\"col-md-12\">\r\n                        <h3>About</h3>\r\n                          {movie.Plot}\r\n                        <hr/>\r\n                        <a href={\"https://www.imdb.com/title/\" + movie.imdbID} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-primary\">\r\n                            View on IMDB\r\n                        </a>\r\n                        <Link to=\"/\" className=\"btn btn-default text-light\">\r\n                            Go Back to Seach\r\n                        </Link>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            </div>\r\n        )\r\n\r\n        let content = loading ? <Spinner /> : movieinfo;\r\n        return(\r\n        <div>{content}</div>\r\n        )\r\n    }\r\n};\r\n\r\n\r\nconst mapstatetoprops = state =>({\r\n    loading : state.movies.loading,\r\n    movie:state.movies.movie\r\n})\r\n\r\nexport default connect(mapstatetoprops,{fetchMovie})(Movie)","import {SEARCH_MOVIE, FETCH_MOVIE,FETCH_MOVIES} from \"../Actions/type\";\r\n\r\nconst InitState = {\r\n    text : \"\",\r\n    movies:[],\r\n    loading:false,\r\n    movie:[]\r\n}\r\n\r\n\r\nexport default function (state = InitState,action){\r\n    switch(action.type){\r\n        case SEARCH_MOVIE:\r\n            return{\r\n                ...state,\r\n                text:action.payload,\r\n                loading:false\r\n            }\r\n        case FETCH_MOVIES:\r\n            return{\r\n                ...state,\r\n                movies:action.payload,\r\n            }\r\n        case FETCH_MOVIE:\r\n            return{\r\n                ...state,\r\n                movie:action.payload\r\n            }        \r\n            default:\r\n                return state\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport searchReducer from \"./searchReducer\"\r\n\r\nexport default combineReducers({\r\n    movies:searchReducer\r\n});","import {createStore , applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\r\nimport rootReducer from \"../Reducers/Index\"\r\n\r\n\r\nconst middleware = [thunk];\r\n\r\nconst InitState = {\r\n\r\n}\r\n\r\n\r\nconst store = createStore(rootReducer,InitState,composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\n\r\nexport default store;","import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from \"./components/Layout/Navbar\";\nimport Footer from \"./components/Layout/Footer\";\nimport Landing from \"./components/Home/Landing\";\nimport Movie from './components/Home/Movie';\nimport store from \"./Redux/store\";\nimport {Provider} from \"react-redux\";\nimport cors from \"cors\";\nimport {HashRouter as Router, Route} from \"react-router-dom\";\n\nclass App extends Component{\n\n  render(){\n    return (\n      <Provider store={store}>\n        <Router>\n        <div className=\"App\">\n        <Navbar />\n        <Route exact path='/' component={Landing} />\n        <Route exact path='/movie/:id' component={Movie} />\n        <div className=\"footer\">\n        <Footer />\n        </div>\n      </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}